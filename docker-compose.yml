services:
  zemljaslova-sql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: zemljaslova-sql
    restart: unless-stopped
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong!Passw0rd
      - MSSQL_PID=Developer
      - MSSQL_AGENT_ENABLED=true
    user: root
    ports:
      - "1401:1433"
    expose:
      - 1433
    volumes:
      - sql_data:/var/opt/mssql
    networks:
      - zemljaslova-network
    command: >
      bash -c "
      chown -R mssql:0 /var/opt/mssql &&
      /opt/mssql/bin/sqlservr"
    healthcheck:
      test: /opt/mssql-tools18/bin/sqlcmd -S localhost -U SA -P "YourStrong!Passw0rd" -C -Q "IF NOT EXISTS (SELECT name FROM sys.databases WHERE name = '200036') CREATE DATABASE [200036]; SELECT 1" || exit 1
      interval: 30s
      timeout: 10s
      retries: 5

  zemljaslova-db-init:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: zemljaslova-db-init
    volumes:
      - ./ZemljaSlova.API/script.sql:/script.sql:ro
    networks:
      - zemljaslova-network
    depends_on:
      zemljaslova-sql:
        condition: service_healthy
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong!Passw0rd
    entrypoint: /bin/bash
    command: 
      - -c
      - |
        echo "Waiting for SQL Server to be ready..."
        sleep 20
        echo "Checking if database needs initialization..."
        TABLE_COUNT=$$(/opt/mssql-tools18/bin/sqlcmd -S zemljaslova-sql -U SA -P "$$SA_PASSWORD" -d 200036 -C -h -1 -Q "SET NOCOUNT ON; SELECT COUNT(*) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE='BASE TABLE'" 2>/dev/null | tr -d '[:space:]' || echo "0")
        echo "Table count: $$TABLE_COUNT"
        if [ "$$TABLE_COUNT" = "0" ] || [ -z "$$TABLE_COUNT" ]; then
          echo "Database is empty. Running initialization script..."
          /opt/mssql-tools18/bin/sqlcmd -S zemljaslova-sql -U SA -P "$$SA_PASSWORD" -d 200036 -C -i /script.sql
          if [ $$? -eq 0 ]; then
            echo "Database initialization completed successfully!"
          else
            echo "Database initialization failed!"
            exit 1
          fi
        else
          echo "Database already initialized with $$TABLE_COUNT tables. Skipping..."
        fi
        echo "Database ready!"
    restart: on-failure:3

  rabbitmq:
    image: rabbitmq:3-management
    container_name: zemljaslova-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - zemljaslova-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  zemljaslova-api:
    build:
      context: .
      dockerfile: ./ZemljaSlova.API/Dockerfile
    container_name: zemljaslova-api
    restart: unless-stopped
    environment:
      - ConnectionStrings__DefaultConnection=Server=zemljaslova-sql,1433;Database=200036;User=SA;Password=YourStrong!Passw0rd;ConnectRetryCount=0;TrustServerCertificate=True
      - ASPNETCORE_ENVIRONMENT=Development
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
      - SMTP_SERVER=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_USERNAME=zemljaslova@gmail.com
      - SMTP_PASSWORD=vimi rwyf uoqq mjvt
    ports:
      - "7139:7139"
    networks:
      - zemljaslova-network
    depends_on:
      zemljaslova-sql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  zemljaslova-subscriber:
    build:
      context: .
      dockerfile: ./ZemljaSlova.Subscriber/Dockerfile
    container_name: zemljaslova-subscriber
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
      - SMTP_SERVER=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_USERNAME=zemljaslova@gmail.com
      - SMTP_PASSWORD=vimi rwyf uoqq mjvt
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - zemljaslova-network
    restart: unless-stopped

volumes:
  rabbitmq_data:
  sql_data:

networks:
  zemljaslova-network:
    driver: bridge
